#!/usr/bin/env bash

## Refresh aliased environment after deploying code to it. Defaults to production.
##
## Usage: fin deploy [alias]

# Abort if anything fails.
set -e

SYNC_ALIAS=${1:-$DEFAULT_ALIAS}

# Check whether we have a working tty.
# Otherwise we are running in a non-tty environment ( e.g. Babun on Windows).
# We assume the environment is interactive if there is a tty.
# All other direct checks don't work well in and every environment and scripts.
is_tty ()
{
	[[ "$(/usr/bin/tty || true)" != "not a tty" ]]

	# TODO: rewrite this check using [ -t ] test
	# http://stackoverflow.com/questions/911168/how-to-detect-if-my-shell-script-is-running-through-a-pipe/911213#911213
	# 0: stdin, 1: stdout, 2: stderr
	# [ -t 0 -a -t 1 ]
}

# Yes/no confirmation dialog with an optional message
# @param $1 confirmation message
_confirm ()
{
	# Skip checks if not running interactively (not a tty or not on Windows)
	if ! is_tty; then return 0; fi

	while true; do
		read -p "$1 [y/n]: " answer
		case "$answer" in
			[Yy]|[Yy][Ee][Ss] )
				break
				;;
			[Nn]|[Nn][Oo] )
				exit 1
				;;
			* )
				echo 'Please answer yes or no.'
		esac
	done
}

while getopts ":y" opt; do
  case $opt in
    y)
      ASSUME_YES=$opt
      ;;
    \?)
      echo-red "Invalid option: $OPTARG" >&2
      exit 1
      ;;
  esac
done

if [ -z ${ASSUME_YES+x} ]; then
    _confirm "Are you sure you want to execute deployment on ${SYNC_ALIAS}?"
fi

# The --strict=0 argument must be included for these operations when run against Acquia.
fin drush $SYNC_ALIAS cc drush
fin drush $SYNC_ALIAS cr
fin drush $SYNC_ALIAS updb -y --strict=0
fin drush $SYNC_ALIAS entity-updates -y --strict=0
fin drush $SYNC_ALIAS cim -y
fin drush $SYNC_ALIAS cim -y

# Needed to destroy stale Twig templates in a multi-webhead environment, like Acquia.
if [ "$SYNC_ALIAS" != "@{$LOCAL_ALIAS}" ]; then
    fin drush $SYNC_ALIAS ssh "drush {$SYNC_ALIAS} ev '\Drupal\Core\PhpStorage\PhpStorageFactory::get("twig")->deleteAll();' && drush {$SYNC_ALIAS} cr"
fi
